// <auto-generated />
using System;
using CoronaWatchDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoronaWatchDB.Migrations
{
    [DbContext(typeof(CoronaWatchContext))]
    partial class CoronaWatchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("CoronaWatchDB.RegionDB", b =>
                {
                    b.Property<string>("ISOCode")
                        .HasColumnType("TEXT")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("ISOCode");

                    b.ToTable("RegionDBs");
                });

            modelBuilder.Entity("CoronaWatchDB.ReportDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Confirmed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("Death")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ISOCode")
                        .HasColumnType("TEXT")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int?>("Recovered")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RegionDBISOCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RegionDBISOCode");

                    b.ToTable("ReportDBs");
                });

            modelBuilder.Entity("CoronaWatchDB.ReportDB", b =>
                {
                    b.HasOne("CoronaWatchDB.RegionDB", "RegionDB")
                        .WithMany()
                        .HasForeignKey("RegionDBISOCode");
                });
#pragma warning restore 612, 618
        }
    }
}
